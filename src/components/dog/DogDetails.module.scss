@use '../../variables' as *;

.user-name {
  text-transform: capitalize;
}

.title {
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  height: 100%;
}

.content {
  display: flex;
  flex-direction: column;
  gap: 24px;
  color: $text;
  width: 100%;

  &.with-data {
    align-self: flex-start;
  }

  .button {
    border-radius: 8px;
    margin: 8px auto;
    font-size: 14px;
  }

  .empty {
    margin: auto;
    text-align: center;
  }
}

.characters-container {
  padding: 0 8px;
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  row-gap: 24px;
}

.character {
  display: flex;
  gap: 8px;
  align-items: center;

  > :first-child {
    border-radius: 50%;
    height: 48px;
    width: 48px;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;

    svg {
      fill: $white;
    }
  }
}

.text-container {
  display: flex;
  flex-direction: column;
  gap: 4px;

  :first-child {
    font-size: 14px;

    &::first-letter {
      text-transform: capitalize;
    }
  }

  :last-child {
    font-size: 12px;

    &::first-letter {
      text-transform: capitalize;
    }
  }
}

.description {
  padding: 0 8px;
  display: flex;
  flex-direction: column;
  gap: 8px;
}

.description-title {
  display: flex;
  gap: 6px;
  align-items: center;
  font-size: 14px;
}

.description-text {
  font-size: 12px;
}

:export {
  green: $green;
  orange: $orange;
  blue: $blue;
  red: $red;
  lightGreen: rgba($green, 0.2);
  lightOrange: rgba($orange, 0.2);
  lightBlue: rgba($blue, 0.2);
  lightRed: rgba($red, 0.2);
}
